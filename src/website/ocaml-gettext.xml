<?xml version="1.0" encoding="UTF-8"?>
<!--==================================================================
  ocaml-gettext: a library to translate messages 
  
  Copyright (C) 2003-2008 Sylvain Le Gall <sylvain@le-gall.net>
  
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version;
  with the OCaml static compilation exception.
  
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  USA
===================================================================-->

<!DOCTYPE webpage PUBLIC "-//Norman Walsh//DTD Website V2.6//EN"
  "http://docbook.sourceforge.net/release/website/2.6/schema/dtd/website.dtd"> 
<webpage id="ocaml-gettext-project">
  
  <head>
    <title>Project ocaml-gettext</title>
    <titleabbrev>ocaml-gettext</titleabbrev>
    <summary>OCaml library for string translation.</summary>
  </head>

  <webtoc/>

  <section>
    <title>Goals</title>
    <para>ocaml-gettext should provide a support for internationalization of OCaml program.</para>
    <para>Constraints:</para>
    <itemizedlist>
      <listitem>
        <para>provides a pure OCaml implementation,</para>
      </listitem>
      <listitem>
        <para>the API should be as close as possible to GNU gettext,</para>
      </listitem>
      <listitem>
        <para>provides a way to automatically extract translatable strings from OCaml source
        code.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Description</title>

    <para>
      Internationalization of a program means that the program have the possibility to handle
      different language. Handling different language means that it can output string which 
      depends on the language of the user, who will read it. Typically, if a program output 
      &quot;bonjour&quot; for a french user, and &quot;hello&quot; for an english user, this 
      program is internationalized. 
    </para>

    <para>
      It is possible to make things very simple (at least i think so), for internationalizing
      a program. GNU gettext seems a very good solution. You just need to use a special function
      to translate strings, that need to be translated and they are treated automatically. After 
      having include this function (in the case of ocaml-gettext, functions are &quot;s_&quot;,
      &quot;f_&quot;,&quot;sn_&quot; and &quot;fn_&quot;).
    </para>

    <para>For now, ocaml-gettext provides enough service to build a basic internationalized 
      program. It comes with:</para>
    <itemizedlist>
      <listitem>
        <para>a pure OCaml implementation, based on Camomile,</para>
      </listitem>
      <listitem>
        <para>a binding to GNU gettext library,</para>
      </listitem>
      <listitem>
        <para><command>ocaml-gettext</command> a tool to extract strings from OCaml source.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>News</title>

    <section>
      <sectioninfo><date>April, 30th 2008</date></sectioninfo>
      <title>Version 0.3.0</title>

      <para>
        New version that works with OCaml 3.10.0. It also use less dependencies
        (no more camlidl, nor ocaml-ast-analyze). Improve PO file merging. This
        release fix a lot of bugs, making its usage easier.
      </para>
    </section>

    <section>
      <sectioninfo><date>April, 16th 2005</date></sectioninfo>
      <title>Version 0.2.0</title>

      <para>
        This is the first official public release. 
      </para>
    </section>
  </section>
</webpage>
